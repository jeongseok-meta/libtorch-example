name: CI Windows

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  build:
    name: py-${{ matrix.pixi_env }}-win
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - pixi_env: "cpu"
          - pixi_env: "gpu"
            cuda_version: "12.8.0"
    env:
      FULL_CUDA_VERSION: ${{ matrix.cuda_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install CUDA Toolkit
        if: ${{ contains(matrix.pixi_env, 'cuda') || contains(matrix.pixi_env, 'gpu') }}
        uses: Jimver/cuda-toolkit@v0.2.21
        id: cuda-toolkit
        with:
          # Available versions: https://github.com/Jimver/cuda-toolkit/blob/v0.2.18/src/links/linux-links.ts
          cuda: ${{ matrix.cuda_version }}

      - name: Check CUDA Version
        if: ${{ contains(matrix.pixi_env, 'cuda') || contains(matrix.pixi_env, 'gpu') }}
        run: |
          nvcc --version

      - name: Set Conda environment variables
        if: ${{ contains(matrix.pixi_env, 'cuda') || contains(matrix.pixi_env, 'gpu') }}
        run: |
          echo "CONDA_OVERRIDE_CUDA=$(echo $FULL_CUDA_VERSION | cut -d'.' -f1)" >> $GITHUB_ENV

      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          environments: ${{ matrix.pixi_env }}
          cache: true

      - name: Build
        run: pixi run -e ${{ matrix.pixi_env }} build
